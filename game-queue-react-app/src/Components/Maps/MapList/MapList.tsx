import { FC, useState, useEffect } from 'react';
import { MapCardComponent } from '../MapCard/MapCard';
import { useCurrentRequestId, useMapIds } from '../../../Core/Storage/DataSlice';
import { Map } from '../../../Autogenerated/Backend';
import { SearchMapsRequestAPI } from '../../../Core/APIs/SearchMapsRequestAPI';
import { LoadingIndicator } from '../../UI/LoadingIndicator';

interface MapListProps {
    maps: Map[];
}

export const MapListComponent: FC<MapListProps> = ({ maps }: MapListProps) => {
    const currentRequestId = useCurrentRequestId();
    const [selectedMapIds, setSelectedMapIds] = useState<number[] | null>(null);
    const mapIds = useMapIds();

    useEffect(() => {
        async function getCurrentRequest() {
            if (currentRequestId === null) {
                setSelectedMapIds([]);
                return;
            }
            const currentRequest = await SearchMapsRequestAPI.GetRequest(currentRequestId);
            if (currentRequest === null) {
                setSelectedMapIds([]);
                return;
            }
            console.log('currentRequest :>> ', currentRequest);
            setSelectedMapIds(currentRequest.maps!.map((x) => x.id!));
        }

        getCurrentRequest();
    }, [currentRequestId, mapIds]);

    if (selectedMapIds === null) {
        return <LoadingIndicator />;
    }
    console.log('currentRequestId :>> ', currentRequestId);

    return (
        <div className="container" style={{ display: 'flex' }}>
            <div className="row text-center" style={{ width: '100%' }}>
                <h5 className="p-0">Карты:</h5>
                <div className="row row-cols-3">
                    {maps.map((m) => (
                        <MapCardComponent map={m} added={selectedMapIds.findIndex((id) => id == m.id) != -1} key={m.id} />
                    ))}
                </div>
            </div>
        </div>
    );
};
