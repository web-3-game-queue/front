// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using game_queue_front.Database;

#nullable disable

namespace game_queue_front.Migrations
{
    [DbContext(typeof(GameQueueContext))]
    [Migration("20230918122119_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("game_queue_front.Business.MapSearchRequests.MapSearchRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("integer")
                        .HasColumnName("creator_user_id");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_map_search_request");

                    b.HasIndex("CreatorUserId")
                        .HasDatabaseName("ix_map_search_request_creator_user_id");

                    b.ToTable("map_search_request", (string)null);
                });

            modelBuilder.Entity("game_queue_front.Business.Maps.Map", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CoverImageUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cover_image_url");

                    b.Property<decimal>("EntryPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("entry_price");

                    b.Property<int>("Height")
                        .HasColumnType("integer")
                        .HasColumnName("height");

                    b.Property<int>("MaxPlayersCount")
                        .HasColumnType("integer")
                        .HasColumnName("max_players_count");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("status");

                    b.Property<int>("Width")
                        .HasColumnType("integer")
                        .HasColumnName("width");

                    b.HasKey("Id")
                        .HasName("pk_maps");

                    b.ToTable("maps", (string)null);
                });

            modelBuilder.Entity("game_queue_front.Business.Matches.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MapId")
                        .HasColumnType("integer")
                        .HasColumnName("map_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_matches");

                    b.HasIndex("MapId")
                        .HasDatabaseName("ix_matches_map_id");

                    b.ToTable("matches", (string)null);
                });

            modelBuilder.Entity("game_queue_front.Business.RequestMaps.RequestMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MapId")
                        .HasColumnType("integer")
                        .HasColumnName("map_id");

                    b.Property<int>("SearchRequestId")
                        .HasColumnType("integer")
                        .HasColumnName("search_request_id");

                    b.HasKey("Id")
                        .HasName("pk_request_map");

                    b.HasIndex("MapId")
                        .HasDatabaseName("ix_request_map_map_id");

                    b.HasIndex("SearchRequestId")
                        .HasDatabaseName("ix_request_map_search_request_id");

                    b.ToTable("request_map", (string)null);
                });

            modelBuilder.Entity("game_queue_front.Business.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("hashed_password");

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("level");

                    b.Property<int?>("MatchId")
                        .HasColumnType("integer")
                        .HasColumnName("match_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("MatchId")
                        .HasDatabaseName("ix_users_match_id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_users_name");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("game_queue_front.Business.MapSearchRequests.MapSearchRequest", b =>
                {
                    b.HasOne("game_queue_front.Business.Users.User", "CreatorUser")
                        .WithMany("SearchRequests")
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_map_search_request_users_creator_user_id");

                    b.Navigation("CreatorUser");
                });

            modelBuilder.Entity("game_queue_front.Business.Matches.Match", b =>
                {
                    b.HasOne("game_queue_front.Business.Maps.Map", "Map")
                        .WithMany()
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_matches_maps_map_id");

                    b.Navigation("Map");
                });

            modelBuilder.Entity("game_queue_front.Business.RequestMaps.RequestMap", b =>
                {
                    b.HasOne("game_queue_front.Business.Maps.Map", "Map")
                        .WithMany()
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_request_map_maps_map_id");

                    b.HasOne("game_queue_front.Business.MapSearchRequests.MapSearchRequest", "SearchRequest")
                        .WithMany("RequestMaps")
                        .HasForeignKey("SearchRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_request_map_map_search_request_search_request_id");

                    b.Navigation("Map");

                    b.Navigation("SearchRequest");
                });

            modelBuilder.Entity("game_queue_front.Business.Users.User", b =>
                {
                    b.HasOne("game_queue_front.Business.Matches.Match", "Match")
                        .WithMany("Users")
                        .HasForeignKey("MatchId")
                        .HasConstraintName("fk_users_matches_match_id");

                    b.Navigation("Match");
                });

            modelBuilder.Entity("game_queue_front.Business.MapSearchRequests.MapSearchRequest", b =>
                {
                    b.Navigation("RequestMaps");
                });

            modelBuilder.Entity("game_queue_front.Business.Matches.Match", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("game_queue_front.Business.Users.User", b =>
                {
                    b.Navigation("SearchRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
